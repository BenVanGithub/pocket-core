syntax = "proto3";
package x.auth;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "types/coin.proto";

option go_package = "github.com/pokt-network/pocket-core/x/auth/types";

// BaseAccount defines a base account type. It contains all the necessary fields
// for basic account functionality. Any custom account type should extend this
// type for additional functionality (e.g. vesting).
message BaseAccountEncodable {
	option (gogoproto.goproto_getters) = false;
	option (gogoproto.goproto_stringer) = true;
	option (cosmos_proto.implements_interface) = "Account";

	bytes address = 1 [(gogoproto.jsontag) = "address,omitempty", (gogoproto.casttype) = "github.com/pokt-network/pocket-core/types.Address"];
	string pub_key = 2 [(gogoproto.jsontag) = "public_key,omitempty", (gogoproto.moretags) = "yaml:\"public_key\""];
	repeated types.Coin coins = 3 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/pokt-network/pocket-core/types.Coins"];
}

// ModuleAccount defines an account for modules that holds coins on a pool
message ModuleAccountEncodable {
	option (gogoproto.goproto_getters) = false;
	option (gogoproto.goproto_stringer) = true;
	option (cosmos_proto.implements_interface) = "ModuleAccountI";

	BaseAccountEncodable base_account = 1 [(gogoproto.embed) = true, (gogoproto.moretags) = "yaml:\"base_account\""];
	string name = 2;
	repeated string permissions = 3;
}

// Params defines the parameters for the auth module.
message Params {
	option (gogoproto.equal) = true;
	option (gogoproto.goproto_stringer) = true;

	uint64 max_memo_characters = 1 [(gogoproto.jsontag) = "max_memo_characters"];
	uint64 tx_sig_limit = 2 [(gogoproto.jsontag) = "tx_sig_limit"];
	FeeMultipliers feeMultiplier = 3 [(gogoproto.jsontag) = "fee_multipliers"];
}

// Fee Multiplier derfines a key value multiplier for the fee of the
message FeeMultiplier {
	option (gogoproto.goproto_stringer) = true;
	string key = 1 [(gogoproto.jsontag) = "key"];
	int64 multiplier = 2 [(gogoproto.jsontag) = "multiplier"];
}

message FeeMultipliers {
	option (gogoproto.goproto_stringer) = true;
	repeated FeeMultiplier feeMultis = 1 [(gogoproto.jsontag) = "fee_multiplier", (gogoproto.nullable) = false];
	int64 default = 2 [(gogoproto.jsontag) = "default"];
}
message Supply {
	option (gogoproto.goproto_stringer) = true;
	repeated types.Coin total = 1 [(gogoproto.jsontag) = "total", (gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/pokt-network/pocket-core/types.Coins"];
}
