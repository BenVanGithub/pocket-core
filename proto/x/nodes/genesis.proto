syntax = "proto3";
package x.apps;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "x/nodes/nodes.proto";

option go_package = "github.com/pokt-network/pocket-core/x/nodes/types";

// Params defines the parameters for the staking module.
message Params {
	option (gogoproto.equal)            = true;
	option (gogoproto.goproto_stringer) = false;

	int64 RelaysToTokenMultiplier     = 1 [
		(gogoproto.jsontag) = "relays_to_tokens_multiplier",
		(gogoproto.moretags) = "yaml:\"relays_to_tokens_multiplier\""];

	google.protobuf.Duration UnstakingTime = 2 [
		(gogoproto.nullable)    = false,
		(gogoproto.stdduration) = true,
		(gogoproto.jsontag) = "unstaking_time",
		(gogoproto.moretags)    = "yaml:\"unstaking_time\""
	];

	int64 MaxValidators     = 3 [
		(gogoproto.jsontag) = "max_validators",
		(gogoproto.moretags) = "yaml:\"max_validators\""];

	string StakeDenom     = 4 [
		(gogoproto.jsontag) = "stake_denom",
		(gogoproto.moretags) = "yaml:\"stake_denom\""];

	int64 StakeMinimum     = 5 [
		(gogoproto.jsontag) = "stake_minimum",
		(gogoproto.moretags) = "yaml:\"stake_minimum\""];

	int64 SessionBlockFrequency     = 6 [
		(gogoproto.jsontag) = "session_block_frequency",
		(gogoproto.moretags) = "yaml:\"session_block_frequency\""];

	int64 DaoAllocation     = 7 [
		(gogoproto.jsontag) = "dao_allocation",
		(gogoproto.moretags) = "yaml:\"dao_allocation\""];

	int64 ProposerAllocation     = 8 [
		(gogoproto.jsontag) = "proposer_allocation",
		(gogoproto.moretags) = "yaml:\"proposer_allocation\""];

	int64 MaximumChains     = 9 [
		(gogoproto.jsontag) = "maximum_chains",
		(gogoproto.moretags) = "yaml:\"maximum_chains\""];

	int64 MaxJailedBlocks     = 10 [
		(gogoproto.jsontag) = "max_jailed_blocks",
		(gogoproto.moretags) = "yaml:\"max_jailed_blocks\""];

	google.protobuf.Duration MaxEvidenceAge = 11 [
		(gogoproto.nullable)    = false,
		(gogoproto.stdduration) = true,
		(gogoproto.jsontag) = "max_evidence_age",
		(gogoproto.moretags)    = "yaml:\"max_evidence_age\""
	];

	int64 SignedBlocksWindow     = 12 [
		(gogoproto.jsontag) = "signed_blocks_window",
		(gogoproto.moretags) = "yaml:\"signed_blocks_window\""];

	string MinSignedPerWindow           = 13 [
		(gogoproto.customtype) = "github.com/pokt-network/pocket-core/types.Dec",
		(gogoproto.nullable)   = false,
		(gogoproto.jsontag) = "min_signed_per_window",
		(gogoproto.moretags) = "yaml:\"min_signed_per_window\""];

	google.protobuf.Duration DowntimeJailDuration = 14 [
		(gogoproto.nullable)    = false,
		(gogoproto.stdduration) = true,
		(gogoproto.jsontag) = "downtime_jail_duration",
		(gogoproto.moretags)    = "yaml:\"downtime_jail_duration\""
	];

	string SlashFractionDoubleSign           = 15 [
		(gogoproto.customtype) = "github.com/pokt-network/pocket-core/types.Dec",
		(gogoproto.nullable)   = false,
		(gogoproto.jsontag) = "slash_fraction_double_sign",
		(gogoproto.moretags) = "yaml:\"slash_fraction_double_sign\""];

	string SlashFractionDowntime           = 16 [
		(gogoproto.customtype) = "github.com/pokt-network/pocket-core/types.Dec",
		(gogoproto.nullable)   = false,
		(gogoproto.jsontag) = "slash_fraction_downtime",
		(gogoproto.moretags) = "yaml:\"slash_fraction_downtime\""];
}

// MissedBlock contains height and missed status as boolean.
message MissedBlock {
	option (gogoproto.equal) = true;
	// index is the height at which the block was missed.
	int64 index = 1;
	// missed is the missed status.
	bool missed = 2;
}

message PrevStatePowerMapping {
	option (gogoproto.equal)            = true;
	option (gogoproto.goproto_stringer) = true;
	option (gogoproto.goproto_getters)  = false;

	bytes address = 1 [(gogoproto.casttype) = "github.com/pokt-network/pocket-core/types.Address"];
	int64 power = 2;
}

//	Validators               []Validator                     `json:"validators" yaml:"validators"`
//	Exported                 bool                            `json:"exported" yaml:"exported"`
//	SigningInfos             map[string]ValidatorSigningInfo `json:"signing_infos" yaml:"signing_infos"`

message GenesisState{
	option (gogoproto.equal)            = true;
	option (gogoproto.goproto_stringer) = true;

	Params params = 1 [(gogoproto.jsontag) = "params"];
	string PrevStateTotalPower           = 2 [
		(gogoproto.customtype) = "github.com/pokt-network/pocket-core/types.Int",
		(gogoproto.nullable)   = false,
		(gogoproto.jsontag) = "prevState_total_power",
		(gogoproto.moretags) = "yaml:\"prevState_total_power\""];
	repeated PrevStatePowerMapping PrevStateValidatorPowers = 3 [(gogoproto.jsontag) = "prevState_validator_powers"];
	repeated ValidatorProto Validators = 4 [(gogoproto.jsontag) = "validators"];
	bool Exported = 5 [(gogoproto.jsontag) = "exported"];
	map<string,ValidatorSigningInfo> SigningInfos = 6 [(gogoproto.jsontag)="signing_infos"];
	map<string,MissedBlockArray> MissedBlocks = 7 [(gogoproto.jsontag)= "missed_blocks"];
	bytes PreviousProposer = 8 [(gogoproto.casttype) = "github.com/pokt-network/pocket-core/types.Address"];

}

message MissedBlockArray {
	option (gogoproto.equal) = true;
	repeated MissedBlock MissedBlocks = 1 [(gogoproto.jsontag)= "missed_blocks"] ;
}
